name: ficreview
services:
   pg:
      image: postgres:17
      restart: unless-stopped
      container_name: fic_postgres
      environment:
         - POSTGRES_USER=${POSTGRES_USER}
         - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
         - POSTGRES_DB=${POSTGRES_DATABASE}
      volumes:
         - pg_data:/var/lib/postgresql/data
      ports:
         - 5432:5432
      healthcheck:
         test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DATABASE}"]
         interval: 10s
         timeout: 5s
         retries: 5
         start_period: 3s
      networks:
         - net
   redis:
      image: redis:7.2.7-alpine
      container_name: fic_redis
      restart: unless-stopped
      command: redis-server --requirepass ${REDIS_PASSWORD}
      ports:
         - 6379:6379
      volumes:
         - redis_data:/data
      healthcheck:
         test: ["CMD-SHELL", "redis-cli -a ${REDIS_PASSWORD} ping | grep PONG"]
         interval: 10s
         timeout: 5s
         retries: 5
         start_period: 3s
      networks:
         - net
   app:
      build:
         context: .
         dockerfile: Dockerfile
      container_name: fic_api
      restart: unless-stopped
      env_file:
         - .env
      ports:
         - 3333:3333
      depends_on:
         pg:
            condition: service_healthy
         redis:
            condition: service_healthy
      networks:
         - net
volumes:
   pg_data:
   redis_data:
networks:
   net:
